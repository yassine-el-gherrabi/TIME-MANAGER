name: Test

on:
  pull_request:
    branches: [ master ]
    paths: [ "back/**", "front/**", ".github/workflows/test.yml" ]
  push:
    branches: [ master ]
    paths: [ "back/**", "front/**", ".github/workflows/test.yml" ]

concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: true

jobs:
  go-test:
    name: Go Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: back
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Go
        uses: actions/setup-go@v6
        with:
          go-version-file: back/go.mod
          cache: true
          cache-dependency-path: back/go.sum

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.out -covermode=atomic ./...

      - name: Generate coverage report
        run: go tool cover -func=coverage.out

      - name: Upload coverage to Codecov (optional)
        uses: codecov/codecov-action@v4
        with:
          file: ./back/coverage.out
          flags: backend
          fail_ci_if_error: false

  react-test:
    name: React Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: front/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run type-check

      - name: Run tests
        run: npm run test:run

      - name: Generate coverage report
        run: npm run test:coverage

      - name: Upload coverage to Codecov (optional)
        uses: codecov/codecov-action@v4
        with:
          file: ./front/coverage/coverage-final.json
          flags: frontend
          fail_ci_if_error: false